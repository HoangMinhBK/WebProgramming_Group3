{"version":3,"file":"static/js/137.da2ff33e.chunk.js","mappings":"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","sources":["pages/Register/handleRegister.js","pages/Register/index.jsx"],"sourcesContent":["import Axios from \"axios\";\nimport { baseURL } from \"src/configs/api\";\n\nexport default async function handleRegister(\n  username,\n  displayname,\n  password,\n  email\n) {\n  let payload = {\n    display_name: displayname,\n    username: username,\n    password: password,\n    email: email,\n  };\n  try {\n    let res = await Axios.post(baseURL + \"register\", payload);\n    console.log(res);\n    return res;\n  } catch (err) {\n    console.log(err);\n    return err.response;\n  }\n}\n","import { TextField, Box, Typography, Button } from \"@mui/material\";\nimport { useCustomTheme } from \"src/contexts/themeContext\";\nimport { useHistory } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport Background from \"src/assets/images/manga_bg.jpg\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport handleRegister from \"./handleRegister\";\nimport { useSnackbar } from \"notistack\";\n\nexport default function Register() {\n  const {\n    aliceBlue,\n    uranianBlue,\n    lightSkyBlue,\n    blueJeans,\n    blueJeans2,\n    dodgerBlue,\n    bleuDeFrance,\n    brightNavyBlue,\n    greenBlue,\n    cobaltBlue,\n  } = useCustomTheme();\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [res, setRes] = useState(\"\");\n\n  const history = useHistory();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [displayName, setDisplayName] = useState(\"\");\n\n  useEffect(() => {\n    if (res?.status === 200) {\n      enqueueSnackbar(\"Register successfully! Now you can log in\", {\n        variant: \"success\",\n      });\n      history.push(\"/login\");\n      setRes(\"\");\n    } else if (res?.status === 404) {\n      enqueueSnackbar(\"Register Failed! Please try again!\", {\n        variant: \"error\",\n      });\n      setRes(\"\");\n    } else if (res?.status === 400) {\n      enqueueSnackbar(res?.data?.detail, {\n        variant: \"error\",\n      });\n      setRes(\"\");\n    }\n  }, [enqueueSnackbar, history, res, username]);\n  return (\n    <Box\n      height=\"100vh\"\n      width=\"100%\"\n      sx={{\n        // backgroundImage: `linear-gradient(to bottom, ${cobaltBlue} , ${blueJeans2})`,\n        backgroundImage: `linear-gradient(to bottom, ${cobaltBlue} , ${blueJeans2}), url(${Background})`,\n        backgroundPosition: \"center\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundSize: \"cover\",\n        backgroundBlendMode: \"multiply\",\n        backgroundOpacity: 0.3,\n        backgroundBlur: \"100px\",\n      }}\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n    >\n      <Box\n        height={650}\n        width={400}\n        display=\"flex\"\n        flexDirection=\"column\"\n        sx={{ background: \"white\", borderRadius: 5 }}\n        justifyContent=\"center\"\n        alignItems=\"center\"\n      >\n        <Box\n          width={350}\n          display=\"flex\"\n          flexDirection=\"column\"\n          alignItems=\"center\"\n          justifyContent=\"space-between\"\n        >\n          <Typography\n            variant=\"h5\"\n            sx={{\n              fontFamily: \"ubuntu\",\n              fontWeight: \"bold\",\n              mb: 4,\n            }}\n          >\n            Create a new account\n          </Typography>\n          <Box\n            width={350}\n            display=\"flex\"\n            flexDirection=\"column\"\n            alignItems=\"center\"\n          >\n            <TextField\n              type=\"text\"\n              label=\"Username\"\n              fullWidth\n              sx={{ mb: 3 }}\n              onChange={(e) => setUsername(e.target.value)}\n            />\n            <TextField\n              type=\"text\"\n              label=\"Display name\"\n              fullWidth\n              sx={{ mb: 3 }}\n              onChange={(e) => setDisplayName(e.target.value)}\n            />\n            <TextField\n              label=\"Email\"\n              type=\"email\"\n              fullWidth\n              sx={{ mb: 3 }}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <TextField\n              label=\"Password\"\n              type=\"password\"\n              fullWidth\n              sx={{ mb: 3 }}\n              onChange={(e) => setPassword(e.target.value)}\n              error={password !== confirmPassword}\n              helperText={\n                password !== confirmPassword ? \"Password not match\" : \"\"\n              }\n            />\n            <TextField\n              label=\"Confirm password\"\n              type=\"password\"\n              fullWidth\n              sx={{ mb: 3 }}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n              error={password !== confirmPassword}\n              helperText={\n                password !== confirmPassword ? \"Password not match\" : \"\"\n              }\n            />\n            <Button\n              variant=\"contained\"\n              fullWidth\n              type=\"submit\"\n              sx={{ height: 50, background: dodgerBlue, mb: 3 }}\n              disabled={\n                password !== confirmPassword ||\n                username === \"\" ||\n                displayName === \"\" ||\n                email === \"\" ||\n                password === \"\"\n              }\n              onClick={async () => {\n                const res = await handleRegister(\n                  username,\n                  displayName,\n                  password,\n                  email\n                );\n                setRes(res);\n              }}\n            >\n              <Typography\n                sx={{\n                  fontFamily: \"ubuntu\",\n                  fontWeight: \"bold\",\n                }}\n              >\n                Register\n              </Typography>\n            </Button>\n            <Box\n              display=\"flex\"\n              sx={{ cursor: \"pointer\" }}\n              onClick={() => history.push(\"/login\")}\n            >\n              <ArrowBackIcon sx={{ mr: 1 }} />\n              <Typography sx={{ fontFamily: \"ubuntu\" }}>\n                Back to login page\n              </Typography>\n            </Box>\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n"],"names":["handleRegister","username","displayname","password","email","payload","display_name","Axios","baseURL","res","console","log","response","Register","useCustomTheme","blueJeans2","aliceBlue","uranianBlue","lightSkyBlue","blueJeans","dodgerBlue","cobaltBlue","bleuDeFrance","brightNavyBlue","greenBlue","enqueueSnackbar","useSnackbar","useState","setRes","history","useHistory","setUsername","setPassword","setEmail","confirmPassword","setConfirmPassword","displayName","setDisplayName","useEffect","status","variant","push","data","detail","Box","height","width","sx","backgroundImage","Background","backgroundPosition","backgroundRepeat","backgroundSize","backgroundBlendMode","backgroundOpacity","backgroundBlur","display","justifyContent","alignItems","flexDirection","background","borderRadius","Typography","fontFamily","fontWeight","mb","TextField","type","label","fullWidth","onChange","e","target","value","error","helperText","Button","disabled","onClick","cursor","ArrowBack","mr"],"sourceRoot":""}